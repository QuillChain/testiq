{"version":3,"sources":["utils/math.js","redux/reducers/index.jsx","redux/store.jsx","redux/constants/index.jsx","redux/actions/index.jsx","components/Button.jsx","utils/storage.js","containers/Start.jsx","components/Beginning.jsx","constant/colors.js","components/AnswerModal.jsx","components/Quiz.jsx","components/Done.jsx","components/Timmer.jsx","components/Lifes.jsx","components/Points.jsx","components/TableScore.jsx","containers/MathQuiz.jsx","components/Footer.jsx","App.js","redux/index.jsx","serviceWorker.js","index.js"],"names":["PRIMES_NUMBERS","getRandomSymbol","symbols","max","length","Math","round","random","evaluate","symbol","prev","ram","floor","commonMultiple","filter","n","ramNum","getRandomNumber","range","toFixed","generateProblem","points","lv","parseInt","prevNum","problem","i","anotherNumber","getAnotherNumber","concat","compare","expression","value","solve","Number","result","eval","toString","includes","__webpack_exports__","initialState","lifes","seconds","level","isFinished","isStarted","compose","applyMiddleware","thunk","createStore","state","arguments","undefined","action","type","newPonts","payload","Object","assign","newCorrectState","newLive","stateGame","bol","dispatch","Button","_ref","children","isClicked","react_default","a","createElement","className","onClick","Persistent","set","key","localStorage","setItem","get","getItem","Session","sessionStorage","Start","player","setNameOfPlayer","event","_this","setState","target","clicked","props","startPressed","components_Button","this","React","Component","Beginning","msg","handleCount","prevState","_this2","intervalRef","setInterval","nextProps","nextState","clearInterval","isComplete","Colors","yellow","lightBlue","darkGray","midGray","lightGray","darkBg","red","green","Message","_ref2","text","style","color","AnswerModal","modalType","class","el","Quiz","_isMounted","answer","modal","modalShowing","streaks","earnLife","onEarnLife","showModal","correctAnswer","onCorretAnswer","nextProblem","wrongAnswer","onWrongAnswer","MathHelper","setTimeout","getProblem","answerInput","focus","evaluateProblem","keyingUp","ev","val","match","components_AnswerModal","newProblem","onEndGame","fontSize","ref","input","placeholder","onKeyUp","fontFamily","cursor","margin","height","border","fontWeight","Done","divider","buttonRetry","otherButton","poinstStyle","retryGame","onReStartGame","Timmer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_secondsIntervalRef","_this3","setTimeChanged","defaultProps","Lifes","hearts","push","marginLeft","Points","container","display","justifyContent","flex","title","timeCol","padding","sectionContainer","textAlign","RowScore","name","moment","Date","time","fromNow","TableScore","playerName","scoreTable","JSON","parse","now","sort","b","slice","stringify","map","MathQuiz","isBeginningDone","lastPoints","onRetryGame","completeBeginning","components_Done","components_Timmer","components_Lifes","components_Quiz","components_Beginning","Footer","href","alt","src","App","gameStart","onStartGame","src_containers_MathQuiz","containers_Start","connect","s","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4606022b.chunk.js","sourcesContent":["export const PRIMES_NUMBERS = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\n\n/**\n * Get a random symbol (+ , - , / , *)\n */\nconst getRandomSymbol = () => {\n    const symbols = [\"+\", \"+\"]; // Adding another \"addition\" at the end to grow the posibilities.\n    var min = 0;\n    var max = symbols.length - 1;\n    var random = Math.round(Math.random() * (+max - +min) + +min);\n    return symbols[random];\n}\n\n\n/**\n * Return a fuction and it will be used to generate the next number of the operation\n * \n * @param {string} symbol \n * @param {number} prev \n */\nexport const evaluate = (symbol, prev) => {\n\n    // Division\n    if  (symbol === \"/\") {\n        return () => {\n            const ram = Math.floor(Math.random() * (10 - 1) + 1) \n            const commonMultiple = PRIMES_NUMBERS.filter(n => (prev % n === 0) && ram * n)\n            const index = Math.floor(Math.random() * (commonMultiple.length - 1))\n            \n            return +commonMultiple[index] || 1\n        }\n    } \n\n\n    // Multiplication\n    if (symbol === \"*\") {\n\n        let ramNum = 0\n\n        if (prev < 15) {\n            ramNum = 15\n        }\n\n        if (prev > 14 && prev < 50) {\n            ramNum = 8\n        }\n\n        if (prev > 49) {\n            ramNum = 5\n        }\n\n        return () => getRandomNumber(ramNum)\n    }\n\n    // Others\n    return () => getRandomNumber(20)\n}\n\n/**\n * Get a random number from zero to range passed as parameter (default 100)\n * \n * @param {number} range \n */\nconst getRandomNumber = range => {\n    return (Math.random() * (range || 15)).toFixed()\n}\n\n\n/**\n * Return an math operation depending of the user's point.\n * \n * @param {number} points \n */\nconst generateProblem = (points) => {\n\n    const lv = parseInt(((points/100) /5) + 1)\n    let prevNum =  getRandomNumber();\n    let problem = prevNum\n\n    for (let i=0; i < lv; i++) {\n        let symbol = getRandomSymbol();\n        let getAnotherNumber = evaluate(symbol, prevNum)\n        let anotherNumber = getAnotherNumber() || 0 // Avoid undefined\n        problem += ` ${symbol} ${anotherNumber}`\n        prevNum = anotherNumber\n    }\n    return problem\n};\n\n/**\n * Evaluate the math expression with the value passed. \n * @param {string} expression \n * @param {number} value \n */\nconst compare = (expression, value) => {\n   return solve(expression) === Number(value)\n}\n\n/**\n * Solve the expression\n * @param {string} expression \n */\nconst solve = (expression) => {\n    // eslint-disable-next-line no-eval\n    const result = eval(expression)\n    \n    // Returning just two fixed-point\n    if (result.toString().includes(\".\")) {\n        return Number(result.toFixed(2))\n    }\n    return result;\n}\n\n\nexport default {\n    generateProblem,\n    compare,\n    solve\n}","import {\n  SET_TIME,\n  GAIN_POINTS,\n  REMOVE_LIVE,\n  CORRECT_ANSWER,\n  FINISH_GAME,\n  RESTART_GAME,\n  REBOOT_GAME,\n  START_GAME,\n  EARN_LIFE\n} from \"../constants\";\n\nconst initialState = {\n  points: 0,\n  lifes: 3,\n  seconds: 20,\n  level: 1,\n  isFinished: false,\n  isStarted: false\n};\n\nexport const answerQuiz = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case GAIN_POINTS:\n      const newPonts = state.points + action.payload;\n      return Object.assign({}, state, {\n        points: newPonts\n      });\n    case SET_TIME:\n      return Object.assign({}, state, {\n        seconds: action.payload\n      });\n    case CORRECT_ANSWER:\n      const newCorrectState = {\n        points: state.points + action.payload.points,\n        level: state.level + action.payload.level\n      };\n      return Object.assign({}, state, newCorrectState);\n    case REMOVE_LIVE:\n      const newLive = state.lifes - action.payload;\n      return Object.assign({}, state, {\n        lifes: newLive\n      });\n    case FINISH_GAME:\n      return Object.assign({}, state, {\n        isFinished: action.payload\n      });\n    case RESTART_GAME:\n      return Object.assign({}, state, {\n        points: 0,\n        lifes: 3,\n        seconds: 20,\n        level: 1,\n        isFinished: false\n      });\n    case START_GAME:\n      return Object.assign({}, state, {\n        isStarted: true\n      });\n    case EARN_LIFE:\n      return Object.assign({}, state, {\n        lifes: state.lifes + 1\n      });\n    case REBOOT_GAME:\n      return Object.assign({}, state, {\n        points: 0,\n        lifes: 3,\n        seconds: 20,\n        level: 1,\n        isFinished: false,\n        isStarted: false\n      });\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { answerQuiz } from './reducers/index'\n\n\nexport default compose(applyMiddleware(thunk))(createStore)(answerQuiz) // store;","export const CORRECT_ANSWER = \"CORRECT_ANSWER\";\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\nexport const SET_TIME = \"SET_TIME\";\nexport const GAIN_POINTS = \"GAIN_POINTS\";\nexport const REMOVE_LIVE = \"REMOVE_LIVE\";\nexport const FINISH_GAME = \"FINISH_GAME\";\nexport const RESTART_GAME = \"RESTART_GAME\";\nexport const REBOOT_GAME = \"REBOOT_GAME\";\nexport const START_GAME = \"START_GAME\";\nexport const EARN_LIFE = \"EARN_LIFE\";","import {\n  REMOVE_LIVE,\n  CORRECT_ANSWER,\n  SET_TIME,\n  FINISH_GAME,\n  RESTART_GAME,\n  REBOOT_GAME,\n  START_GAME,\n  EARN_LIFE\n} from \"../constants/index\";\n\nexport const correctAnswer = () => (dispatch) => {\n    dispatch({ type: CORRECT_ANSWER, payload: { points: 100, level: 1} });\n    \n};\n\nexport const wrongAnswer = () => (dispatch) => {\n    dispatch({ type: REMOVE_LIVE, payload: 1 });\n}\n\n\nexport const timeChaged = seconds => (dispatch) => {\n    dispatch({ type: SET_TIME, payload: seconds });    \n}\n\nexport const stateGame = (bol) => (dispatch) => {\n    if (bol) {\n        dispatch({ type: FINISH_GAME, payload: true });\n    } else {\n        dispatch({ type: RESTART_GAME, payload: true });\n    }\n}\n\nexport const reStartGame = () => (dispatch) => {\n    dispatch({ type: REBOOT_GAME });\n}\n\nexport const startGame = () => (dispatch) => {\n    dispatch({ type: START_GAME });\n}\n\nexport const earnLife = () => dispatch => {\n    dispatch({ type: EARN_LIFE });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ children, isClicked }) {\n  return (\n    <button className=\"App-link\" onClick={isClicked}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  isClicked: PropTypes.func\n};\n\nexport default Button;\n","\nexport const Persistent = {\n\n    set(key, value) {\n        localStorage.setItem(key, value)\n    },\n\n    get(key) {\n        return localStorage.getItem(key);\n    }\n\n}\n\n\nexport const Session = {\n\n    set(key, value) {\n        sessionStorage.setItem(key, value)\n    },\n\n    get(key) {\n        return sessionStorage.getItem(key);\n    }\n\n}\n\nexport default {\n    Persistent,\n    Session\n};","import React from 'react';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { Session } from '../utils/storage'\n\nclass Start extends React.Component {\n\n    state = {\n        player: \"player\"\n    }\n\n    setNameOfPlayer = (event) => {\n        this.setState({ player: event.target.value })\n    }\n\n    clicked = () => {\n        Session.set(\"onlinePlayer\", this.state.player)\n        this.props.startPressed();\n    }\n\n    render (){\n        return (\n            <div>\n                <div className=\"App-brandname\">\n                    <i className=\"fas fa-graduation-cap\"></i> \n                    <br/>    \n                    <h3>Test Your</h3>     \n                    <h1>IQ?</h1>\n                </div>\n                {/* <Input text=\"Insert your name\" onInputChange={this.setNameOfPlayer} /> */}\n                <p>\n                    Press to start the game\n                </p>\n                <Button isClicked={this.clicked}>Easy</Button>\n                <Button isClicked={this.clicked}>Hard</Button>\n            </div>\n        )\n    }\n}\nexport default Start;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nclass Beginning extends React.Component {\n  state = {\n    msg: 3\n  };\n  intervalRef;\n\n  componentDidMount() {\n    this.intervalRef = setInterval(() => this.setState(this.handleCount), 1000);\n  }\n\n  handleCount = prevState => {\n    if (prevState.msg === 1) {\n      return { msg: \"GO\" };\n    }\n\n    if (prevState.msg === \"GO\") {\n      return { msg: undefined };\n    }\n    return { msg: prevState.msg - 1 };\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.msg === undefined) {\n      clearInterval(this.intervalRef);\n      this.props.isComplete();\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalRef);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>GET READY...</h3>\n        <h1>{this.state.msg}</h1>\n      </div>\n    );\n  }\n}\n\n\nBeginning.propTypes = {\n  isComplete: PropTypes.func.isRequired,\n}\n\nexport default Beginning;\n","\nconst Colors = {\n    yellow: \"#d8b600\",\n    lightBlue: \"#61dafb\",\n    darkGray: \"#999ea7\",\n    midGray: \"#424855\",\n    lightGray: \"#f5f5f5\",\n    darkBg: \"#282c34\",\n    red:\"#ff6572\",\n    green: \"#31cd61\"\n}\n\nexport default Colors","import React from 'react';\nimport Colors from '../constant/colors'\nimport PropTypes from 'prop-types'\n\nfunction AnswerModal({ type, text }) {\n\n    const modalType = type === \"success\" ? \n        ({ class: \"correct-answer\", el: <i className=\"fas fa-check\"></i>}) : \n        ({ class: \"wrong-answer\", el: <i className=\"fas fa-times-circle\"></i>});\n    return (\n        <section>\n            <div className={`answer  ${modalType.class}`}>\n                <h2> {modalType.el} </h2>\n            </div>\n            <Message type={type} text={text} />\n        </section>\n        );\n}\n\nfunction Message({ text, type }) {\n    return (\n        <span>\n            {text && (type === \"success\") && <h4 style={{color: Colors.green }}>{text}</h4> } \n            {text && (type !== \"success\") && <h4 style={{color: Colors.midGray }}>Answer: <span style={{color: Colors.lightGray }}>{text}</span></h4>}\n        </span>\n    )\n}\n\n\nAnswerModal.propTypes = {\n    type: PropTypes.oneOf(['success', 'error']),\n    text: PropTypes.string,\n}\n\n\nexport default AnswerModal;","import React from \"react\";\nimport AnswerModal from \"./AnswerModal\";\nimport { MathHelper } from \"../utils\";\n\nclass Quiz extends React.Component {\n  _isMounted = false;\n  _secondsIntervalRef;\n\n  state = {\n    problem: \"\",\n    answer: 0,\n    modal: \"\",\n    modalShowing: false,\n    streaks: 0\n  };\n\n  earnLife = () => {\n    this.props.onEarnLife();\n    this.showModal(\"success\", \"STREAK!! You won a life ♥\");\n    this.setState({\n      streaks: 0\n    });\n  };\n\n  correctAnswer = () => {\n    if (this.state.streaks > 2) {\n      this.earnLife();\n    } else {\n      this.showModal(\"success\");\n    }\n\n    this._isMounted && this.props.onCorretAnswer();\n    this.setState(state => {\n      return {\n        streaks: state.streaks + 1\n      };\n    });\n\n    this.nextProblem();\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.getProblem();\n    this.answerInput.focus();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.props.lifes < 1) {\n      this.props.onEndGame(this.state.points);\n      return false;\n    }\n    return nextProps.lifes > -1;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  wrongAnswer = () => {\n    this._isMounted && this.props.onWrongAnswer();\n    this.setState({\n      streaks: 0\n    });\n    this.showModal(\"error\", MathHelper.solve(this.state.problem).toString());\n    this.nextProblem();\n  };\n\n  nextProblem = () => {\n    setTimeout(() => {\n      this.getProblem();\n      this._isMounted &&\n        this.setState({\n          modalShowing: false\n        });\n      if (this.props.lifes > 0) this.answerInput.focus();\n    }, 2500);\n  };\n\n  evaluateProblem = () => {\n    if (MathHelper.compare(this.state.problem, this.state.answer)) {\n      return this.correctAnswer();\n    }\n    return this.wrongAnswer();\n  };\n\n  keyingUp = ev => {\n    if (ev.key === \"Enter\") {\n      this.evaluateProblem();\n    }\n    const val = ev.target.value;\n\n    this.setState({\n      answer: Number(val.match(/((-?)\\d+)/g)) // accept just numbers and the minus symbol\n    });\n  };\n\n  showModal = (type, text) => {\n    this.setState({\n      modal: <AnswerModal type={type} text={text} />,\n      modalShowing: true\n    });\n  };\n\n  getProblem = () => {\n    const newProblem = MathHelper.generateProblem(this.props.points);\n    this._isMounted &&\n      this.setState({\n        problem: newProblem\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"show-up\">\n        <div>\n          {this.state.modalShowing ? (\n            this.state.modal\n          ) : (\n            <div>\n              <h1 style={{ fontSize: \"3.5em\" }}> {this.state.problem} </h1>\n              <input\n                ref={input => {\n                  this.answerInput = input;\n                }}\n                className=\"App-input\"\n                type=\"number\"\n                placeholder=\"Answer\"\n                onKeyUp={this.keyingUp}\n              />\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst style = {\n  buttonRetry: {\n    fontSize: \"1.5em\",\n    color: \"#61dafb\",\n    fontFamily: \"fantasy\",\n    cursor: \"pointer\"\n  },\n  otherButton: {\n    color: \"white\",\n    fontFamily: \"fantasy\",\n    cursor: \"pointer\",\n    fontSize: \"1em\",\n    margin: \"0.1em auto 3em\"\n  },\n  divider: {\n    height: 0,\n    border: \"0.5px solid #61dafb\"\n  },\n  poinstStyle: {\n    color: \"#61dafb\",\n    fontWeight: \"bold\"\n  }\n};\n\nclass Done extends React.Component {\n  render() {\n    const { divider, buttonRetry, otherButton, poinstStyle } = style;\n    return (\n      <div>\n        <h2>\n          FINAL SCORE <b style={poinstStyle}>{this.props.points}</b>\n        </h2>\n        <hr style={divider} />\n        <h1>Well Done!</h1>\n        <br />\n        <h3 style={buttonRetry} onClick={this.props.retryGame}>\n          RETRY\n        </h3>\n        <h5 style={otherButton} onClick={this.props.onReStartGame}>\n          Another player\n        </h5>\n        {this.children}\n      </div>\n    );\n  }\n}\n\nDone.propTypes = {\n  points: PropTypes.number.isRequired,\n  retryGame: PropTypes.func.isRequired,\n  onReStartGame: PropTypes.func.isRequired\n}\n\nexport default Done;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Timmer extends React.Component {\n\n    _secondsIntervalRef;\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            seconds: this.props.seconds,\n            level: this.props.level\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n          seconds: this.props.seconds\n        });\n        this._secondsIntervalRef = setInterval(() => this.setState(prevState => ({\n            seconds: --prevState.seconds\n        })), 1000)\n    }\n\n\n    componentDidUpdate() {\n        if (this.props.level !== this.state.level) {\n\n            this.setState(prevState => ({\n              level: this.props.level,\n              seconds: prevState.seconds + 0\n            }));\n            \n            this.props.setTimeChanged(this.state.seconds);\n        }\n\n        if(this.state.seconds < 0) {\n            this.props.onEndGame();\n        }\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this._secondsIntervalRef);\n    }\n\n    render() {\n        return (\n            <span>\n                <i className=\"fas fa-clock\"></i> <b>{ this.state.seconds }</b>\n            </span>\n        )\n    }\n}\n\nTimmer.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    level: PropTypes.number.isRequired,\n}\n\nTimmer.defaultProps = {\n    level: 0    \n}\n\nexport default Timmer;","import React from 'react'\nimport Colors from '../constant/colors';\nimport PropTypes from 'prop-types'\n\nfunction Lifes({ lifes }) {\n\n    let hearts = [];\n\n    if (lifes < 5) {\n        for (let i = 0; i < lifes; i++) {\n            hearts.push(<i key={i} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\n        }\n    } else {\n        hearts.push(<i key={lifes} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\n    }\n\n    \n    return (\n        <span style={{color: Colors.red}}>\n            {lifes > 4 && <b>{`${lifes}x`}</b> }\n            {hearts}\n        </span>\n    );\n}\n\nLifes.propTypes = {\n    lifes: PropTypes.number.isRequired\n}\n\nexport default Lifes","import React from 'react'\nimport Colors from '../constant/colors'\n\nexport default function Points ({ points }) {\n\n    return (\n        <span>\n            <i className=\"fas fa-star\" style={{ color: Colors.yellow }}></i> {points}\n        </span>\n        )\n\n}","import React from 'react'\nimport { Session, Persistent } from '../utils/storage'\nimport * as moment from 'moment'\nimport Colors from '../constant/colors';\n\n\n\nconst style = {\n    container:{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n    },\n    el: {\n        flex: 1\n    },\n    title: {\n        margin: \"0.6em auto\"\n    },\n    divider: { border: `0.5px solid ${Colors.midGray}`},\n    timeCol: {\n        flex: 1,\n        padding: \"0.3em 0em\",\n        fontSize: \"0.6em\",\n        color: Colors.darkGray,\n    },\n    sectionContainer: { textAlign: \"left\", padding: \"0.15em 0em\" }\n}\n\n\n\nfunction RowScore ({ player }) {\n    return (\n        <div style={style.sectionContainer}>\n            <h5 style={style.title}>{player.name}</h5>\n            <div style={style.container}>\n                <small style={style.timeCol}>\n                    <i className=\"fas fa-clock\"></i> \n                    {\" \" + moment(new Date(player.time)).fromNow()}\n                </small>\n                <small style={style.el}><i className=\"fas fa-star\" style={{color: Colors.yellow }}></i> {player.points}</small>\n            </div>\n            <hr style={style.divider} />\n        </div>\n    )\n}\n\n\n\n\n\nexport default function TableScore ({ points }) {\n\n    const playerName = Session.get(\"onlinePlayer\");\n    let scoreTable = JSON.parse(Persistent.get(\"scoreTable\")) || [];\n\n    scoreTable.push({\n        name: playerName,\n        points,\n        time: Date.now()\n    })\n\n    scoreTable = scoreTable.sort((a, b) => b.points - a.points).slice(0,4)\n\n    Persistent.set(\"scoreTable\", JSON.stringify(scoreTable))\n\n    return (\n        <div>\n            {\n                scoreTable.map((player, i) => {\n                    return (\n                        <RowScore player={player} key={i} />\n                    )\n                })\n            }\n        </div>\n    )\n\n}","import React from 'react';\nimport Beginning from \"../components/Beginning\";\nimport Quiz from \"../components/Quiz\";\nimport Done from \"../components/Done\";\nimport Timmer from '../components/Timmer';\nimport Lifes from '../components/Lifes'\nimport Points from '../components/Points'\nimport \"./MathQuiz.css\"\nimport TableScore from '../components/TableScore';\n\nclass MathQuiz extends React.Component {\n  state = {\n    isBeginningDone: false,\n    lastPoints: 0\n  };\n\n  retryGame = () => {\n    this.setState({ isBeginningDone: false })\n    this.props.onRetryGame();\n  }\n\n  completeBeginning = () => {\n    this.setState({ isBeginningDone: true });\n  };\n\n  render() {\n    return !this.props.isFinished ? (\n      <div>\n        {!this.state.isBeginningDone ? (\n          <Beginning isComplete={this.completeBeginning} />\n        ) : (\n          <div>\n              <div className=\"App-header-bar\">\n                <Timmer {...this.props} />\n                <Lifes {...this.props} />\n                <Points {...this.props} />\n              </div>\n              <Quiz {...this.props} />\n          </div>\n        )}\n      </div>\n    ) : (\n      <Done {...this.props} retryGame={this.retryGame} >\n        <TableScore {...this.props} />\n      </ Done>\n    );\n  }\n}\n\nexport default MathQuiz;","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className=\"App-footer\">\n          <small><a href=\"https://www.buymeacoffee.com/covergamer\"><img alt='buymeacoffee' src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=covergamer&button_colour=5F7FFF&font_colour=ffffff&font_family=Lato&outline_colour=000000&coffee_colour=FFDD00\" /></a></small>\n        </footer>\n    )\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { mapDispatchToProps, mapStateToProps } from './redux/index'\nimport Start from './containers/Start';\nimport MathQuiz from './containers/MathQuiz';\nimport './App.css';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  \n\n  gameStart = () => {\n    this.props.onStartGame();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\n            !this.props.isStarted ? (\n              <Start startPressed={this.gameStart} />\n            ) : (\n              <MathQuiz { ...this.props} gameStart={this.gameStart}/>\n            )\n          }\n        </header>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  correctAnswer,\n  wrongAnswer,\n  timeChaged,\n  stateGame,\n  reStartGame,\n  startGame,\n  earnLife\n} from \"./actions/index\";\n\nexport const mapStateToProps = state => {\n  return {\n    points: state.points,\n    lifes: state.lifes,\n    seconds: state.seconds,\n    level: state.level,\n    isFinished: state.isFinished,\n    isStarted: state.isStarted\n  };\n};\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    onCorretAnswer: s => dispatch(correctAnswer(s)),\n    onWrongAnswer: () => dispatch(wrongAnswer()),\n    setTimeChanged: s => dispatch(timeChaged(s)),\n    onEndGame: () => dispatch(stateGame(true)),\n    onRetryGame: () => dispatch(stateGame(false)),\n    onReStartGame: () => dispatch(reStartGame()),\n    onStartGame: () => dispatch(startGame()),\n    onEarnLife: () => dispatch(earnLife()),\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}